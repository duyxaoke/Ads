
@{
    ViewData["Title"] = "Mange config";
}
<div class="col-md-12" ng-controller="IndexController" ng-cloak>
    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">@ViewBag.Title</h3>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-primary btn-sm" ng-click="Create()"><i class="glyphicon glyphicon-plus"></i> Thêm mới</button>
            </div>
        </div>
        <div class="box-body">
            <table id="myTable" class="table table-hover"></table>
            <!-- Large modal -->
            <div class="modal fade" id="PnModal">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header bg-primary">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                            <h4 class="modal-title">{{ UpdateMode ? "Cập nhật" : "Thêm mới" }}</h4>
                        </div>
                        <div class="modal-body">
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" id="SystemEnable" ng-model="Config.SystemEnable"> System enable
                                </label>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-light" data-dismiss="modal">Đóng</button>
                            <button type="submit" class="btn btn-primary" ng-disabled="frmModal.$invalid" ng-click="Save()">{{ UpdateMode ? "Cập nhật" : "Thêm" }}</button>
                        </div>
                    </div>
                    <!-- /.modal-content -->
                </div>
                <!-- /.modal-dialog -->
            </div>
            <!-- /.modal -->
        </div>
    </div>
</div>


@section scripts{
    <script>
        var IndexController = ($scope, $rootScope, $timeout, $filter, $compile, ApiHelper, CommonHelper, $q) => {

            //#region declare variable
            $scope.UpdateMode = false;
            $scope.Config = {};
            //#endregion

            //#region Datatable
            $(function () {
                var peopleList = $('#myTable').DataTable({
                    "bProcessing": true,
                    "bSort": true,
                    "bServerSide": true,
                    "language": {
                        paginate: {
                            previous: '<i class="fa fa-lg fa-angle-left"></i>',
                            next: '<i class="fa fa-lg fa-angle-right"></i>'
                        }
                    },
                    "sAjaxSource": "/Configs/Data",
                    "aoColumnDefs": [
                        {
                            "sName": "SystemEnable",
                            "sTitle": "System enable",
                            "className": "text-center",
                            "bSearchable": true,
                            "bSortable": true,
                            "aTargets": [0],
                            'mRender': function (data, type, row, meta) {
                                return data == 'True' ? '<i class="fa fa-circle text-green"></i>' : '<i class="fa fa-circle text-red"></i>';
                            }
                        },
                        {
                            'mRender': function (data, type, row, meta) {
                                return `
                                    <button class="btn btn-primary btn-sm" ng-click="Update('` + data + `');" data-toggle="tooltip" data-placement="top" title="Cập nhật"><i class="fa fa-edit"></i></button>
                                    <button class="btn btn-danger btn-sm" ng-click="Delete('` + data + `');" data-toggle="tooltip" data-placement="top" title="Xóa"><i class="fa fa-times"></i></button>`;
                            },
                            "sName": "Id",
                            "sTitle": "Thao tác",
                            "className": "text-center",
                            "bSortable": false,
                            "aTargets": [1]
                        }
                    ],
                    createdRow: function (row, data, dataIndex) {
                        $compile(angular.element(row).contents())($scope);
                    }
                });
            });
            //#endregion

            //#region ReadById
            var ReadById = (Id) => {
                let defer = $q.defer();
                $rootScope.MasterPage.IsLoading = true;
                let strApiEndPoint = CommonHelper.ConfigUrl + Id;
                ApiHelper.GetMethod(strApiEndPoint)
                    .then(function (response) {
                        $rootScope.MasterPage.IsLoading = false;
                        $scope.Config = response.Data;
                        defer.resolve(response);
                    })
                    .catch(function (response) {
                        sys.Alert(false, response.Message);
                        defer.reject(response);
                        $rootScope.MasterPage.IsLoading = false;
                    });
                return defer.promise;
            };
            //#endregion

            //#region Create
            $scope.Create = function () {
                $scope.UpdateMode = false;
                $scope.Config = {};
                $('#PnModal').appendTo('body').modal('show');
            };
            //#endregion

            //#region Update
            $scope.Update = function (Id) {
                $scope.UpdateMode = true;
                ReadById(Id);
                $('#PnModal').appendTo('body').modal('show');
            }
            //#endregion

            //#region Delete
            $scope.Delete = function (Id) {
                Swal.fire({
                    title: "Xác nhận xóa?",
                    text: "Một khi đã xóa, bạn không thể khôi phục lại",
                    type: "warning",
                    showCancelButton: !0,
                    confirmButtonText: "Đồng ý",
                    cancelButtonText: "Quay lại",
                    confirmButtonClass: "btn btn-success mt-2",
                    cancelButtonClass: "btn btn-danger ml-2 mt-2",
                    buttonsStyling: !1
                }).then(function (t) {
                    if (t.value) {
                            let defer = $q.defer();
                            $rootScope.MasterPage.IsLoading = true;
                            let strApiEndPoint = CommonHelper.ConfigUrl + "delete/" + Id;
                            ApiHelper.DeleteMethod(strApiEndPoint)
                                .then(function (response) {
                                    $rootScope.MasterPage.IsLoading = false;
                                    $('#myTable').DataTable().ajax.reload(null, false);
                                    sys.Alert(true, 'Xóa thành công!');
                                    defer.resolve(response);
                                })
                                .catch(function (response) {
                                    sys.Alert(false, response.Message);
                                    defer.reject(response);
                                    $rootScope.MasterPage.IsLoading = false;
                                });
                        }
                    });
            };
            //#endregion

            //#region Save
            $scope.Save = function () {
                let defer = $q.defer();
                if (!$scope.UpdateMode) {
                    $rootScope.MasterPage.IsLoading = true;
                    let strApiEndPoint = CommonHelper.ConfigUrl + "create";
                    ApiHelper.PostMethod(strApiEndPoint, $scope.Config)
                        .then(function (response) {
                            $rootScope.MasterPage.IsLoading = false;
                            $('#myTable').DataTable().ajax.reload(null, false);
                            sys.Alert(true, 'Thêm thành công');
                            defer.resolve(response);
                        })
                        .catch(function (response) {
                            sys.Alert(false, response.Message);
                            defer.reject(response);
                            $rootScope.MasterPage.IsLoading = false;
                        });
                    $('#PnModal').modal('hide');
                }
                else {
                    $rootScope.MasterPage.IsLoading = true;
                    let strApiEndPoint = CommonHelper.ConfigUrl + "update";
                    ApiHelper.PutMethod(strApiEndPoint, $scope.Config)
                        .then(function (response) {
                            $rootScope.MasterPage.IsLoading = false;
                            $('#myTable').DataTable().ajax.reload(null, false);
                            sys.Alert(true, 'Cập nhật thành công');
                            defer.resolve(response);
                        })
                        .catch(function (response) {
                            sys.Alert(false, response.Message);
                            defer.reject(response);
                            $rootScope.MasterPage.IsLoading = false;
                        });
                    $('#PnModal').modal('hide');
                }
            };
            //#endregion
        }
        IndexController.$inject = ["$scope", "$rootScope", "$timeout", "$filter", "$compile", "ApiHelper", "CommonHelper", "$q"];
        addController("IndexController", IndexController);
    </script>
}
